## Setup Instructions

### 1.1 Clone the Repository


### 1.2 Setup DB

    psql -U postgres

        CREATE USER postgres_user WITH PASSWORD 'Postgres25$';

        CREATE DATABASE payslip_db OWNER postgres_user;
        GRANT ALL PRIVILEGES ON DATABASE payslip_db TO postgres_user;

        CREATE DATABASE payslip_db_test OWNER postgres_user;
        GRANT ALL PRIVILEGES ON DATABASE payslip_db_test TO postgres_user;

### 2. Install Dependencies

  ```bash
  npm install
  ```

### 3. Create a `.env` File

  ```bash
  cp .env.example .env
  ```

### 4. Generate a JWT Secret

  ```bash
  node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
  ```

### 5.1 Run Seeders to generate 1 admin and 100 employees with random data

  ```bash
  node seeders/seedEmployeesAndAdmin.js
  ```

### 5.2 Seeder DB to simulate attendance, overtime and reimbursements for most of 100 employee during payrol period #1 2025-06-01 until 2025-06-30

  ```bash
  npx sequelize-cli db:seed:all --env development
  ```

### 6. Start the Server

  ```bash
  node server.js
  ```


## API Endpoints

### 1. ADMIN - Create Payroll Period

  **Sample Request:**
  ```bash
  curl -X POST http://localhost:3000/api/admin/payroll-period \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer <ADMIN_TOKEN>" \
    -d '{
      "start_date": "2025-06-01",
      "end_date": "2025-06-30"
    }'
  ```

  **Sample Response:**
  ```json
  {
    "message": "✅ Payroll period created successfully.",
    "data": {
      "id": 1,
      "start_date": "2025-06-01",
      "end_date": "2025-06-30",
      "is_processed": false,
      "created_by": "admin",
      "updated_by": "admin",
      "ip_address": "::1",
      "updatedAt": "2025-06-08T12:49:42.890Z",
      "createdAt": "2025-06-08T12:49:42.890Z"
    }
  }
  ```

### 2. Employee - Login

  **Sample Request:**
  ```bash
  curl -X POST http://localhost:3000/api/auth/login \
    -H "Content-Type: application/json" \
    -d '{
      "username": "Stanford.Goyette",
      "password": "password123"
    }'
  ```

  **Sample Response:**
  ```json
  {
    "token": "XXX.YYY.ZZZ"
  }
  ```

### 3. Employee - Submit Attendance

  **Sample Request:**
  ```bash
  curl -X POST http://localhost:3000/api/employees/attendance \
    -H "Authorization: Bearer <EMPLOYEE_TOKEN>" \
    -H "Content-Type: application/json" \
    -d '{}'
  ```

  **Sample Response:**
  ```json
  {
    "message":"Attendance submitted successfully."
  }
  ```

### 4. Employee - Submit Overtime

  **Sample Request:**
  ```bash
  curl -X POST http://localhost:3000/api/employees/overtime \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer <EMPLOYEE_TOKEN>" \
    -d '{
      "date": "2025-06-07",
      "hours": 2.5
    }'
  ```

  **Sample Response:**
  ```json
  {"message":"Overtime submitted successfully."}
  ```

### 5. Employee - Submit Reimbursement

  **Sample Request:**
  ```bash
  curl -X POST http://localhost:3000/api/employees/reimbursement \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer <EMPLOYEE_TOKEN>" \
    -d '{
      "amount": 150.75,
      "description": "Taxi fare for client meeting",
      "date": "2025-06-07"
    }'
  ```

  **Sample Response:**
  ```json
  {"message":"Reimbursement submitted successfully."}
  ```

### 6. ADMIN - Login

  **Sample Request:**
  ```bash
  curl -X POST http://localhost:3000/api/auth/admin/login \
    -H "Content-Type: application/json" \
    -d '{
      "username": "admin",
      "password": "admin123"
    }'
  ```

  **Sample Response:**
  ```json
  {
    "token": "XXX.YYY.ZZZ"
  }
  ```

### 7. ADMIN - Run Payroll

  **Sample Request:**
  ```bash
    curl -X POST http://localhost:3000/api/admin/run-payroll/1 \
      -H "Authorization: Bearer <EMPLOYEE_TOKEN>"
  ```

  **Sample Response:**
  ```json
    {"message":"✅ Payroll processed successfully.","summary":{"processed_employees":100,"period":{"id":1,"start":"2025-06-01","end":"2025-06-30"}}}
  ```

### 8. EMPLOYEE - Generate Payslip

  **Sample Request:**
  ```bash
    curl -X POST http://localhost:3000/api/employees/generate-payslip \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer <EMPLOYEE_TOKEN>" \
    -d '{"payroll_period_id": 1}'
  ```

  **Sample Response:**
  ```json
    {"message":"✅ Payslip generated successfully.","payslip":{"employee_id":6,"payroll_period_id":1,"base_salary":"7637.14","attendance_days":22,"overtime_hours":"14.68","overtime_pay":"1216.10","reimbursements":"150.75","total_pay":"9004.00","created_by":"Stanford.Goyette","updated_by":"Stanford.Goyette","ip_address":"::1"},"pdf":"/pdf/payslip_6_1.pdf"}
  ```

### 9. ADMIN - Generate Summary Payslips

  **Sample Request:**
  ```bash
    curl -X GET http://localhost:3000/api/admin/payslips/summary/1 \
    -H "Authorization: Bearer <ADMIN_TOKEN>" \
    -H "Content-Type: application/json"
  ```

  **Sample Response:**
  ```json
    {"period":"2025-06-01 to 2025-06-30","summary":[{"employee_id":1,"total_pay":8750.54},{"employee_id":2,"total_pay":6318.94},{"employee_id":3,"total_pay":6014.84},{"employee_id":4,"total_pay":4304.05},{"employee_id":5,"total_pay":6968.01},{"employee_id":6,"total_pay":8444.04},{"employee_id":7,"total_pay":9406.76},{"employee_id":8,"total_pay":10922.89},{"employee_id":9,"total_pay":6941.71},{"employee_id":10,"total_pay":3745.66},{"employee_id":11,"total_pay":7021.34},{"employee_id":12,"total_pay":6132.94},{"employee_id":13,"total_pay":5482.89},{"employee_id":14,"total_pay":4695.28},{"employee_id":15,"total_pay":10725.31},{"employee_id":16,"total_pay":8141.71},{"employee_id":17,"total_pay":9162.2},{"employee_id":18,"total_pay":4224.62},{"employee_id":19,"total_pay":5340.23},{"employee_id":20,"total_pay":8040.16},{"employee_id":21,"total_pay":8650.72},{"employee_id":22,"total_pay":6980.06},{"employee_id":23,"total_pay":8436.64},{"employee_id":24,"total_pay":3809.59},{"employee_id":25,"total_pay":7641.32},{"employee_id":26,"total_pay":4000.84},{"employee_id":27,"total_pay":3763.09},{"employee_id":28,"total_pay":8272.29},{"employee_id":29,"total_pay":8311.52},{"employee_id":30,"total_pay":10150.19},{"employee_id":31,"total_pay":9395.15},{"employee_id":32,"total_pay":3212.73},{"employee_id":33,"total_pay":9775.59},{"employee_id":34,"total_pay":7728.14},{"employee_id":35,"total_pay":8178.85},{"employee_id":36,"total_pay":3723.58},{"employee_id":37,"total_pay":6471.66},{"employee_id":38,"total_pay":6872.45},{"employee_id":39,"total_pay":3915.66},{"employee_id":40,"total_pay":7902.52},{"employee_id":41,"total_pay":5235.86},{"employee_id":42,"total_pay":4521.75},{"employee_id":43,"total_pay":4012.26},{"employee_id":44,"total_pay":6661.42},{"employee_id":45,"total_pay":9982.3},{"employee_id":46,"total_pay":5813.93},{"employee_id":47,"total_pay":7029.29},{"employee_id":48,"total_pay":8123.16},{"employee_id":49,"total_pay":6619.89},{"employee_id":50,"total_pay":5728.51},{"employee_id":51,"total_pay":8896.15},{"employee_id":52,"total_pay":9124.63},{"employee_id":53,"total_pay":11102.43},{"employee_id":54,"total_pay":4085.99},{"employee_id":55,"total_pay":8813.85},{"employee_id":56,"total_pay":7899.74},{"employee_id":57,"total_pay":4690.04},{"employee_id":58,"total_pay":9688.88},{"employee_id":59,"total_pay":8165.61},{"employee_id":60,"total_pay":9871.9},{"employee_id":61,"total_pay":5005.78},{"employee_id":62,"total_pay":7923.1},{"employee_id":63,"total_pay":3489.74},{"employee_id":64,"total_pay":6730.09},{"employee_id":65,"total_pay":8588.05},{"employee_id":66,"total_pay":7134.66},{"employee_id":67,"total_pay":8686.69},{"employee_id":68,"total_pay":7730.07},{"employee_id":69,"total_pay":9284.92},{"employee_id":70,"total_pay":3924.47},{"employee_id":71,"total_pay":8948.97},{"employee_id":72,"total_pay":8520.73},{"employee_id":73,"total_pay":6383.08},{"employee_id":74,"total_pay":8734.34},{"employee_id":75,"total_pay":8225.68},{"employee_id":76,"total_pay":10974.62},{"employee_id":77,"total_pay":6184.78},{"employee_id":78,"total_pay":4396.7},{"employee_id":79,"total_pay":3561.17},{"employee_id":80,"total_pay":5677.86},{"employee_id":81,"total_pay":10378.95},{"employee_id":82,"total_pay":9761.69},{"employee_id":83,"total_pay":5586.45},{"employee_id":84,"total_pay":6483.75},{"employee_id":85,"total_pay":4622.8},{"employee_id":86,"total_pay":5845.6},{"employee_id":87,"total_pay":3523.69},{"employee_id":88,"total_pay":6702.86},{"employee_id":89,"total_pay":4302.2},{"employee_id":90,"total_pay":5541.02},{"employee_id":91,"total_pay":8000.49},{"employee_id":92,"total_pay":4913.6},{"employee_id":93,"total_pay":8456.46},{"employee_id":94,"total_pay":6145.96},{"employee_id":95,"total_pay":4232.19},{"employee_id":96,"total_pay":7244.16},{"employee_id":97,"total_pay":5725.43},{"employee_id":98,"total_pay":3612.68},{"employee_id":99,"total_pay":9620.94},{"employee_id":100,"total_pay":10738.7}],"total_take_home":"695589.42"}

  ```

## RUN Tests

    all:

        npm test

    individual file:

        npm test -- tests/employeeController.test.js